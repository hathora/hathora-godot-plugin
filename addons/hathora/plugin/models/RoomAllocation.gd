extends Resource

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# RoomAllocation Model
# Metadata on allocated instances of a room.


#       (but it's actually a DateTime ; no timezones support in Gdscript)
# Required: True
# isArray: false
@export var unscheduledAt: String:
	set(value):
		__unscheduledAt__was__set = true
		unscheduledAt = value
var __unscheduledAt__was__set := false

#       (but it's actually a DateTime ; no timezones support in Gdscript)
# Required: True
# isArray: false
@export var scheduledAt: String:
	set(value):
		__scheduledAt__was__set = true
		scheduledAt = value
var __scheduledAt__was__set := false

# System generated unique identifier to a runtime instance of your game server.
# Required: True
# isArray: false
@export var processId: String = "":
	set(value):
		__processId__was__set = true
		processId = value
var __processId__was__set := false

# System generated unique identifier to an allocated instance of a room.
# Required: True
# isArray: false
@export var roomAllocationId: String = "":
	set(value):
		__roomAllocationId__was__set = true
		roomAllocationId = value
var __roomAllocationId__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	if not self.__unscheduledAt__was__set:
		bzz_missing_properties.append("unscheduledAt")
	if not self.__scheduledAt__was__set:
		bzz_missing_properties.append("scheduledAt")
	if not self.__processId__was__set:
		bzz_missing_properties.append("processId")
	if not self.__roomAllocationId__was__set:
		bzz_missing_properties.append("roomAllocationId")
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__unscheduledAt__was__set:
		bzz_dictionary["unscheduledAt"] = self.unscheduledAt
	if self.__scheduledAt__was__set:
		bzz_dictionary["scheduledAt"] = self.scheduledAt
	if self.__processId__was__set:
		bzz_dictionary["processId"] = self.processId
	if self.__roomAllocationId__was__set:
		bzz_dictionary["roomAllocationId"] = self.roomAllocationId
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("unscheduledAt"):
		me.unscheduledAt = from_dict["unscheduledAt"]
	if from_dict.has("scheduledAt"):
		me.scheduledAt = from_dict["scheduledAt"]
	if from_dict.has("processId"):
		me.processId = from_dict["processId"]
	if from_dict.has("roomAllocationId"):
		me.roomAllocationId = from_dict["roomAllocationId"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

