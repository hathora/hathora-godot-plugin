extends Resource

const Region = preload("../models/Region.gd")

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# BuildRegionalContainerTagsInner Model


# Required: True
# isArray: false
@export var containerTag: String = "":
	set(value):
		__containerTag__was__set = true
		containerTag = value
var __containerTag__was__set := false

# Required: True
# isArray: false
@export var region: Region:
	set(value):
		__region__was__set = true
		region = value
var __region__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	if not self.__containerTag__was__set:
		bzz_missing_properties.append("containerTag")
	if not self.__region__was__set:
		bzz_missing_properties.append("region")
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__containerTag__was__set:
		bzz_dictionary["containerTag"] = self.containerTag
	if self.__region__was__set:
		bzz_dictionary["region"] = self.region
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("containerTag"):
		me.containerTag = from_dict["containerTag"]
	if from_dict.has("region"):
		me.region = from_dict["region"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

